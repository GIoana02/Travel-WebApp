{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Travel-WebApp\\\\travel-app\\\\src\\\\Flights.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Assuming React Router is being used\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const history = useHistory();\n  const [flight, setFlight] = useState({\n    flight_id: 0,\n    airline: '',\n    flight_number: '',\n    departure_airport: '',\n    departure_city: '',\n    departure_time: '',\n    arrival_airport: '',\n    arrival_city: '',\n    arrival_time: '',\n    duration: '',\n    price: '',\n    available_seats: '',\n    aircraft_type: '',\n    flight_class: '',\n    stopovers: '',\n    booking_info: '',\n    images: ''\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token'); // Retrieve token from wherever it's stored\n\n    if (!token) {\n      // Redirect the user to the login page if no token is found\n      history.push('/login');\n    } else {\n      try {\n        const decodedToken = decodeToken(token);\n        // Check if the decoded token indicates the user is an admin\n        if (decodedToken && decodedToken.role === 'admin') {\n          setIsAdmin(true);\n        } else {\n          setIsAdmin(false);\n          // Redirect to a different page or show a message for non-admin users\n        }\n      } catch (error) {\n        console.error('Error decoding token:', error.message);\n        // Handle token decoding error (e.g., redirect to login)\n        history.push('/login');\n      }\n    }\n  }, [history]);\n\n  // Functions to handle admin-only endpoints\n  const addFlight = async flightData => {\n    if (!isAdmin) {\n      // Prevent non-admin users from accessing this endpoint\n      return;\n    }\n    // Make API call to add_flight endpoint\n    // Use proper API handling methods (fetch, axios, etc.) here\n    try {\n      const response = await fetch('/api/add_flight/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // Include authorization token in headers for authenticated requests\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(flightData)\n      });\n      const data = await response.json();\n      console.log(data); // Handle response data\n    } catch (error) {\n      console.error('Error adding flight:', error);\n      // Handle error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"rBk1ixL/8NbCJTmiA5oeiWkeThQ=\", false, function () {\n  return [useHistory];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["useEffect","useState","useHistory","Fragment","_Fragment","jsxDEV","_jsxDEV","AdminPage","_s","isAdmin","setIsAdmin","history","flight","setFlight","flight_id","airline","flight_number","departure_airport","departure_city","departure_time","arrival_airport","arrival_city","arrival_time","duration","price","available_seats","aircraft_type","flight_class","stopovers","booking_info","images","token","localStorage","getItem","push","decodedToken","decodeToken","role","error","console","message","addFlight","flightData","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Work/Travel-WebApp/travel-app/src/Flights.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'; // Assuming React Router is being used\r\n\r\nfunction AdminPage() {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const history = useHistory();\r\n  const [flight, setFlight] = useState({\r\n    flight_id: 0,\r\n    airline: '',\r\n    flight_number: '',\r\n    departure_airport: '',\r\n    departure_city: '',\r\n    departure_time: '',\r\n    arrival_airport: '',\r\n    arrival_city: '',\r\n    arrival_time: '',\r\n    duration: '',\r\n    price: '',\r\n    available_seats: '',\r\n    aircraft_type: '',\r\n    flight_class: '',\r\n    stopovers: '',\r\n    booking_info: '',\r\n    images: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token'); // Retrieve token from wherever it's stored\r\n\r\n    if (!token) {\r\n      // Redirect the user to the login page if no token is found\r\n      history.push('/login');\r\n    } else {\r\n      try {\r\n        const decodedToken = decodeToken(token);\r\n        // Check if the decoded token indicates the user is an admin\r\n        if (decodedToken && decodedToken.role === 'admin') {\r\n          setIsAdmin(true);\r\n        } else {\r\n          setIsAdmin(false);\r\n          // Redirect to a different page or show a message for non-admin users\r\n        }\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error.message);\r\n        // Handle token decoding error (e.g., redirect to login)\r\n        history.push('/login');\r\n      }\r\n    }\r\n  }, [history]);\r\n\r\n  // Functions to handle admin-only endpoints\r\n  const addFlight = async (flightData) => {\r\n    if (!isAdmin) {\r\n      // Prevent non-admin users from accessing this endpoint\r\n      return;\r\n    }\r\n    // Make API call to add_flight endpoint\r\n    // Use proper API handling methods (fetch, axios, etc.) here\r\n    try {\r\n      const response = await fetch('/api/add_flight/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Include authorization token in headers for authenticated requests\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify(flightData),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data); // Handle response data\r\n    } catch (error) {\r\n      console.error('Error adding flight:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Your React components/UI for the admin page */}\r\n      {isAdmin && (\r\n        <>\r\n          {/* Render admin-only components or provide access to admin features */}\r\n          {/* For example: buttons to add, delete, update flights */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}