{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Travel-WebApp\\\\travel-app\\\\src\\\\Flights.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport api from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flights = () => {\n  _s();\n  const cookies = new Cookies();\n  const [userRole, setUserRole] = useState('');\n  const [flights, setFlights] = useState([]);\n  const [newFlight, setNewFlight] = useState({\n    airline: ''\n  });\n\n  // Fetch all flights\n  const getAllFlights = async () => {\n    try {\n      const response = await api.get('/admin/get_all_flights/');\n      setFlights(response.data); // Assuming the response contains an array of flights\n    } catch (error) {\n      console.error('Error fetching flights:', error);\n    }\n  };\n\n  // Add a new flight\n  const addFlight = async () => {\n    try {\n      await api.post('/admin/add_flight/', newFlight);\n      setNewFlight({}); // Clear the newFlight state after adding\n      // Optionally, you can refresh the flight list after adding a new flight\n      getAllFlights();\n    } catch (error) {\n      console.error('Error adding flight:', error);\n    }\n  };\n\n  // Delete a flight by ID\n  const deleteFlight = async flightId => {\n    try {\n      await api.delete(`/admin/delete_flight/${flightId}`);\n      // Refresh the flight list after deleting a flight\n      getAllFlights();\n    } catch (error) {\n      console.error('Error deleting flight:', error);\n    }\n  };\n\n  // Update a flight by ID\n  const updateFlight = async (flightId, updatedFlight) => {\n    try {\n      await api.put(`/admin/update_flight/${flightId}`, updatedFlight);\n      // Refresh the flight list after updating a flight\n      getAllFlights();\n    } catch (error) {\n      console.error('Error updating flight:', error);\n    }\n  };\n\n  // Handle input change for adding a new flight\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewFlight({\n      ...newFlight,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    // Read the cookies when the component mounts\n    const adminToken = cookies.get('admin_token');\n    const userToken = cookies.get('user_token');\n\n    // Determine the user role based on the presence of tokens\n    if (adminToken) {\n      setUserRole('admin');\n    } else if (userToken) {\n      setUserRole('user');\n    }\n  }, [cookies]);\n  useEffect(() => {\n    if (userRole === 'admin') {\n      getAllFlights(); // Fetch flights for admin role\n    }\n  }, [userRole]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: flights.map(flight => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [flight.flight_number, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteFlight(flight.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)]\n        }, flight.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addFlight,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"flight_number\",\n          placeholder: \"Enter Flight Number\",\n          value: newFlight.flight_number || '',\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Flight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), userRole === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"User Functionality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(Flights, \"nIy36t6GToAwoZlCMxQvsc5IQ94=\");\n_c = Flights;\nexport default Flights;\nvar _c;\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"names":["React","useState","useEffect","Cookies","api","jsxDEV","_jsxDEV","Flights","_s","cookies","userRole","setUserRole","flights","setFlights","newFlight","setNewFlight","airline","getAllFlights","response","get","data","error","console","addFlight","post","deleteFlight","flightId","delete","updateFlight","updatedFlight","put","handleInputChange","event","name","value","target","adminToken","userToken","children","map","flight","flight_number","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/Work/Travel-WebApp/travel-app/src/Flights.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport api from \"./api\";\r\n\r\nconst Flights = () => {\r\n    const cookies = new Cookies();\r\n    const [userRole, setUserRole] = useState('');\r\n    const [flights, setFlights] = useState([]);\r\n    const [newFlight, setNewFlight] = useState({\r\n        airline : '',\r\n\r\n    });\r\n\r\n    // Fetch all flights\r\n    const getAllFlights = async () => {\r\n        try {\r\n            const response = await api.get('/admin/get_all_flights/');\r\n            setFlights(response.data); // Assuming the response contains an array of flights\r\n        } catch (error) {\r\n            console.error('Error fetching flights:', error);\r\n        }\r\n    };\r\n\r\n    // Add a new flight\r\n    const addFlight = async () => {\r\n        try {\r\n            await api.post('/admin/add_flight/', newFlight);\r\n            setNewFlight({}); // Clear the newFlight state after adding\r\n            // Optionally, you can refresh the flight list after adding a new flight\r\n            getAllFlights();\r\n        } catch (error) {\r\n            console.error('Error adding flight:', error);\r\n        }\r\n    };\r\n\r\n    // Delete a flight by ID\r\n    const deleteFlight = async (flightId) => {\r\n        try {\r\n            await api.delete(`/admin/delete_flight/${flightId}`);\r\n            // Refresh the flight list after deleting a flight\r\n            getAllFlights();\r\n        } catch (error) {\r\n            console.error('Error deleting flight:', error);\r\n        }\r\n    };\r\n\r\n    // Update a flight by ID\r\n    const updateFlight = async (flightId, updatedFlight) => {\r\n        try {\r\n            await api.put(`/admin/update_flight/${flightId}`, updatedFlight);\r\n            // Refresh the flight list after updating a flight\r\n            getAllFlights();\r\n        } catch (error) {\r\n            console.error('Error updating flight:', error);\r\n        }\r\n    };\r\n\r\n    // Handle input change for adding a new flight\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setNewFlight({\r\n            ...newFlight,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Read the cookies when the component mounts\r\n        const adminToken = cookies.get('admin_token');\r\n        const userToken = cookies.get('user_token');\r\n\r\n        // Determine the user role based on the presence of tokens\r\n        if (adminToken) {\r\n            setUserRole('admin');\r\n        } else if (userToken) {\r\n            setUserRole('user');\r\n        }\r\n    }, [cookies]);\r\n\r\n    useEffect(() => {\r\n        if (userRole === 'admin') {\r\n            getAllFlights(); // Fetch flights for admin role\r\n        }\r\n    }, [userRole]);\r\n\r\n    return (\r\n        <div>\r\n            {/* Your navigation links */}\r\n            {userRole === 'admin' && (\r\n                <div>\r\n                    {/* Display admin-specific functionalities */}\r\n                    {/* Flight Management Interface */}\r\n                    <ul>\r\n                        {flights.map((flight) => (\r\n                            <li key={flight.id}>\r\n                                {flight.flight_number}\r\n                                <button onClick={() => deleteFlight(flight.id)}>Delete</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <form onSubmit={addFlight}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"flight_number\"\r\n                            placeholder=\"Enter Flight Number\"\r\n                            value={newFlight.flight_number || ''}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <button type=\"submit\">Add Flight</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            {userRole === 'user' && (\r\n                <div>\r\n                    {/* Display user-specific functionalities */}\r\n                    {/* Add user-specific UI elements or functionalities */}\r\n                    <button>User Functionality</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Flights;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC;EAC7B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC;IACvCe,OAAO,EAAG;EAEd,CAAC,CAAC;;EAEF;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,yBAAyB,CAAC;MACzDN,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;;EAED;EACA,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMnB,GAAG,CAACoB,IAAI,CAAC,oBAAoB,EAAEV,SAAS,CAAC;MAC/CC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB;MACAE,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACA,MAAMtB,GAAG,CAACuB,MAAM,CAAE,wBAAuBD,QAAS,EAAC,CAAC;MACpD;MACAT,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAMO,YAAY,GAAG,MAAAA,CAAOF,QAAQ,EAAEG,aAAa,KAAK;IACpD,IAAI;MACA,MAAMzB,GAAG,CAAC0B,GAAG,CAAE,wBAAuBJ,QAAS,EAAC,EAAEG,aAAa,CAAC;MAChE;MACAZ,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCpB,YAAY,CAAC;MACT,GAAGD,SAAS;MACZ,CAACmB,IAAI,GAAGC;IACZ,CAAC,CAAC;EACN,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMkC,UAAU,GAAG3B,OAAO,CAACU,GAAG,CAAC,aAAa,CAAC;IAC7C,MAAMkB,SAAS,GAAG5B,OAAO,CAACU,GAAG,CAAC,YAAY,CAAC;;IAE3C;IACA,IAAIiB,UAAU,EAAE;MACZzB,WAAW,CAAC,OAAO,CAAC;IACxB,CAAC,MAAM,IAAI0B,SAAS,EAAE;MAClB1B,WAAW,CAAC,MAAM,CAAC;IACvB;EACJ,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEbP,SAAS,CAAC,MAAM;IACZ,IAAIQ,QAAQ,KAAK,OAAO,EAAE;MACtBO,aAAa,CAAC,CAAC,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,oBACIJ,OAAA;IAAAgC,QAAA,GAEK5B,QAAQ,KAAK,OAAO,iBACjBJ,OAAA;MAAAgC,QAAA,gBAGIhC,OAAA;QAAAgC,QAAA,EACK1B,OAAO,CAAC2B,GAAG,CAAEC,MAAM,iBAChBlC,OAAA;UAAAgC,QAAA,GACKE,MAAM,CAACC,aAAa,eACrBnC,OAAA;YAAQoC,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACe,MAAM,CAACG,EAAE,CAAE;YAAAL,QAAA,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF1DP,MAAM,CAACG,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACLzC,OAAA;QAAM0C,QAAQ,EAAEzB,SAAU;QAAAe,QAAA,gBACtBhC,OAAA;UACI2C,IAAI,EAAC,MAAM;UACXhB,IAAI,EAAC,eAAe;UACpBiB,WAAW,EAAC,qBAAqB;UACjChB,KAAK,EAAEpB,SAAS,CAAC2B,aAAa,IAAI,EAAG;UACrCU,QAAQ,EAAEpB;QAAkB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACFzC,OAAA;UAAQ2C,IAAI,EAAC,QAAQ;UAAAX,QAAA,EAAC;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR,EACArC,QAAQ,KAAK,MAAM,iBAChBJ,OAAA;MAAAgC,QAAA,eAGIhC,OAAA;QAAAgC,QAAA,EAAQ;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvC,EAAA,CArHID,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAuHb,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}