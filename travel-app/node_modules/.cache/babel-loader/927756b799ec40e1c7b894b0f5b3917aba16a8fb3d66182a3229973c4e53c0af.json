{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\Travel-WebApp\\\\travel-app\\\\src\\\\Hotels.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport logoImage from \"./images/logo0.png\";\nimport api from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hotels = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  useEffect(() => {\n    const fetchHotels = async () => {\n      try {\n        const response = await api.get('/hotels');\n        if (Array.isArray(response.data)) {\n          setHotels(response.data);\n        } else {\n          console.error('Invalid data format received.');\n        }\n      } catch (error) {\n        console.error('Error fetching hotels:', error);\n      }\n    };\n    fetchHotels();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hotels.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Check-in Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Check-out Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amenities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room Prices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Availability\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Booking Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: hotels.map((hotelData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: hotelData.map((field, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: field\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hotels found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Hotels, \"Gakc+Y7g9A1UZYw8Op/kyzheHeo=\");\n_c = Hotels;\nexport default Hotels;\nvar _c;\n$RefreshReg$(_c, \"Hotels\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","logoImage","api","jsxDEV","_jsxDEV","Hotels","_s","hotels","setHotels","fetchHotels","response","get","Array","isArray","data","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","hotelData","index","field","idx","_c","$RefreshReg$"],"sources":["D:/Work/Travel-WebApp/travel-app/src/Hotels.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport logoImage from \"./images/logo0.png\";\r\nimport api from \"./api\";\r\n\r\nconst Hotels = () => {\r\n    const [hotels, setHotels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchHotels = async () => {\r\n            try {\r\n                const response = await api.get('/hotels');\r\n                if (Array.isArray(response.data)) {\r\n                    setHotels(response.data);\r\n                } else {\r\n                    console.error('Invalid data format received.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching hotels:', error);\r\n            }\r\n        };\r\n\r\n        fetchHotels();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hotel List</h1>\r\n            <div>\r\n                {hotels.length > 0 ? (\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>City</th>\r\n                                <th>State</th>\r\n                                <th>Country</th>\r\n                                <th>Address</th>\r\n                                <th>Contact Phone</th>\r\n                                <th>Contact Email</th>\r\n                                <th>Description</th>\r\n                                <th>Rating</th>\r\n                                <th>Check-in Time</th>\r\n                                <th>Check-out Time</th>\r\n                                <th>Amenities</th>\r\n                                <th>Room Types</th>\r\n                                <th>Room Prices</th>\r\n                                <th>Images</th>\r\n                                <th>Availability</th>\r\n                                <th>Booking Info</th>\r\n                                <th>Reviews</th>\r\n                                {/* Include other table headers accordingly */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {hotels.map((hotelData, index) => (\r\n                                <tr key={index}>\r\n                                    {/* Map through each field in the hotelData array */}\r\n                                    {hotelData.map((field, idx) => (\r\n                                        <td key={idx}>{field}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                ) : (\r\n                    <p>No hotels found.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hotels;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}