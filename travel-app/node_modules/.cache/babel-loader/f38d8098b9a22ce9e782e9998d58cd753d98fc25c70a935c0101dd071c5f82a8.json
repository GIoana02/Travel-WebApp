{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import api from'./api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const DisplayImage=()=>{const[imageName,setImageName]=useState('');const[imageSrc,setImageSrc]=useState('');const[loading,setLoading]=useState(false);const handleInputChange=event=>{setImageName(event.target.value);};const getImage=async()=>{try{setLoading(true);const response=await api.get(\"/images/display-image/\".concat(imageName),{responseType:'blob'// Set responseType to 'blob' to handle binary data\n});const reader=new FileReader();reader.onload=async()=>{const image=new Image();image.src=reader.result;image.onload=()=>{const canvas=document.createElement('canvas');const maxWidth=300;// Adjust the maximum width as needed\nconst maxHeight=300;// Adjust the maximum height as needed\nlet width=image.width;let height=image.height;if(width>maxWidth||height>maxHeight){const aspectRatio=width/height;if(width>height){width=maxWidth;height=width/aspectRatio;}else{height=maxHeight;width=height*aspectRatio;}}canvas.width=width;canvas.height=height;const ctx=canvas.getContext('2d');ctx.drawImage(image,0,0,width,height);const resizedImageUrl=canvas.toDataURL('image/jpeg');// Change format if needed\nsetImageSrc(resizedImageUrl);setLoading(false);};};reader.readAsDataURL(response.data);}catch(error){console.error('There was a problem fetching the image:',error);setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter image name\",value:imageName,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"button\",{onClick:getImage,children:\"Fetch Image\"})]}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading image...\"}):imageSrc?/*#__PURE__*/_jsx(\"img\",{src:imageSrc,alt:imageName}):/*#__PURE__*/_jsx(\"p\",{children:\"No image to display\"})]});};export default DisplayImage;","map":{"version":3,"names":["React","useState","axios","api","jsx","_jsx","jsxs","_jsxs","DisplayImage","imageName","setImageName","imageSrc","setImageSrc","loading","setLoading","handleInputChange","event","target","value","getImage","response","get","concat","responseType","reader","FileReader","onload","image","Image","src","result","canvas","document","createElement","maxWidth","maxHeight","width","height","aspectRatio","ctx","getContext","drawImage","resizedImageUrl","toDataURL","readAsDataURL","data","error","console","children","type","placeholder","onChange","onClick","alt"],"sources":["D:/Work/Travel-WebApp/travel-app/src/ImageSelector.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from './api'\r\n\r\nconst DisplayImage = () => {\r\n  const [imageName, setImageName] = useState('');\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    setImageName(event.target.value);\r\n  };\r\n\r\n  const getImage = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get(`/images/display-image/${imageName}`, {\r\n        responseType: 'blob', // Set responseType to 'blob' to handle binary data\r\n      });\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = async () => {\r\n        const image = new Image();\r\n        image.src = reader.result;\r\n\r\n        image.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const maxWidth = 300; // Adjust the maximum width as needed\r\n          const maxHeight = 300; // Adjust the maximum height as needed\r\n          let width = image.width;\r\n          let height = image.height;\r\n\r\n          if (width > maxWidth || height > maxHeight) {\r\n            const aspectRatio = width / height;\r\n\r\n            if (width > height) {\r\n              width = maxWidth;\r\n              height = width / aspectRatio;\r\n            } else {\r\n              height = maxHeight;\r\n              width = height * aspectRatio;\r\n            }\r\n          }\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n\r\n          const ctx = canvas.getContext('2d');\r\n          ctx.drawImage(image, 0, 0, width, height);\r\n\r\n          const resizedImageUrl = canvas.toDataURL('image/jpeg'); // Change format if needed\r\n\r\n          setImageSrc(resizedImageUrl);\r\n          setLoading(false);\r\n        };\r\n      };\r\n      reader.readAsDataURL(response.data);\r\n\r\n    } catch (error) {\r\n      console.error('There was a problem fetching the image:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter image name\"\r\n          value={imageName}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={getImage}>Fetch Image</button>\r\n      </div>\r\n      {loading ? (\r\n        <p>Loading image...</p>\r\n      ) : imageSrc ? (\r\n        <img src={imageSrc} alt={imageName} />\r\n      ) : (\r\n        <p>No image to display</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}